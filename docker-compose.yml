version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: shopping_cart_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: shopping_cart
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    container_name: shopping_cart_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
# /**  auth-service:
#     build:
#       context: ./auth-service
#       dockerfile: Dockerfile
#     container_name: auth_service
#     ports:
#       - "8081:8081"
#     environment:
#       SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/shopping_cart
#       SPRING_DATASOURCE_USERNAME: admin
#       SPRING_DATASOURCE_PASSWORD: admin123
#       JWT_SECRET: acPmic02z6BK4fzVhqjPIYuKFq5+o8eOQw2iZVVnLLM=
#     depends_on:
#       postgres:
#         condition: service_healthy

#   product-service:
#     build:
#       context: ./product-service
#       dockerfile: Dockerfile
#     container_name: product_service
#     ports:
#       - "8082:8082"
#     environment:
#       SPRING_REDIS_HOST: redis
#       SPRING_REDIS_PORT: 6379
#       EXTERNAL_API_URL: https://fakestoreapi.com
#     depends_on:
#       redis:
#         condition: service_healthy

#   order-service:
#     build:
#       context: ./order-service
#       dockerfile: Dockerfile
#     container_name: order_service
#     ports:
#       - "8083:8083"
#     environment:
#       SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/shopping_cart
#       SPRING_DATASOURCE_USERNAME: admin
#       SPRING_DATASOURCE_PASSWORD: admin123
#       SPRING_REDIS_HOST: redis
#       PRODUCT_SERVICE_URL: http://localhost:8082
#     depends_on:
#       postgres:
#         condition: service_healthy
#       redis:
#         condition: service_healthy

#  payment-service:
#    build:
#      context: ./payment-service
    #   dockerfile: Dockerfile
    # container_name: payment_service
    # ports:
    #   - "8084:8084"
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/shopping_cart
    #   SPRING_DATASOURCE_USERNAME: admin
    #   SPRING_DATASOURCE_PASSWORD: admin123
    #   ORDER_SERVICE_URL: http://localhost:8083
    # depends_on:
    #   postgres:
    #     condition: service_healthy

volumes:
  postgres_data:
  redis_data: